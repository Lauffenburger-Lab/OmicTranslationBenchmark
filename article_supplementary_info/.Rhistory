trainInfo <- rbind(trainInfo,
trainPaired %>% select(c('sig_id'='sig_id.x'),c('cell_iname'='cell_iname.x'),conditionId),
trainPaired %>% select(c('sig_id'='sig_id.y'),c('cell_iname'='cell_iname.y'),conditionId))
trainInfo <- trainInfo %>% unique()
trainInfo <- trainInfo %>% select(sig_id,conditionId,cell_iname)
valInfo <- rbind(data.table::fread(paste0('../preprocessing/preprocessed_data/10fold_validation_spit/val_a375_',i,'.csv'),header = T) %>% column_to_rownames('V1'),
data.table::fread(paste0('../preprocessing/preprocessed_data/10fold_validation_spit/val_ht29_',i,'.csv'),header = T) %>% column_to_rownames('V1'))
valPaired = data.table::fread(paste0('../preprocessing/preprocessed_data/10fold_validation_spit/val_paired_',i,'.csv'),header = T) %>% column_to_rownames('V1')
valInfo <- rbind(valInfo,
valPaired %>% select(c('sig_id'='sig_id.x'),c('cell_iname'='cell_iname.x'),conditionId),
valPaired %>% select(c('sig_id'='sig_id.y'),c('cell_iname'='cell_iname.y'),conditionId))
valInfo <- valInfo %>% unique()
valInfo <- valInfo %>% select(sig_id,conditionId,cell_iname)
# Load embeddings of pre-trained
embs_train <- rbind(data.table::fread(paste0('../results/MI_results/embs/HT29_A375_withclass/trainEmbs_a375_withclass_',i,'.csv'),header = T),
data.table::fread(paste0('../results/MI_results/embs/HT29_A375_withclass/trainEmbs_ht29_withclass_',i,'.csv'),header = T)) %>% unique() %>%
column_to_rownames('V1')
embs_test <- rbind(data.table::fread(paste0('../results/MI_results/embs/HT29_A375_withclass/valEmbs_a375_withclass_',i,'.csv'),header = T),
data.table::fread(paste0('../results/MI_results/embs/HT29_A375_withclass/valEmbs_ht29_withclass_',i,'.csv'),header = T)) %>% unique() %>%
column_to_rownames('V1')
embs_proc_train <- process_embeddings(embs_train,sigInfo,trainInfo)
embs_proc_test <- process_embeddings(embs_test,sigInfo,valInfo)
# Check distributions in the latent space----
dist_train <- samples_separation(embs_proc_train,
compare_level='duplicates',
metric = 'cosine',
show_plot = F)
dist_train <- dist_train %>% mutate(model='simlarity autoencoders')
dist_train <- dist_train %>% mutate(set='Train')
dist_test <- samples_separation(embs_proc_test,
compare_level='duplicates',
metric = 'cosine',
show_plot = F)
dist_test <- dist_test %>% mutate(model='simlarity autoencoders')
dist_test <- dist_test %>% mutate(set='Validation')
all_dists <- bind_rows(dist_train,dist_test)
if (nrow(as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>% filter(set=='Train') %>%
filter(is_same=='Duplicate Signatures') %>% select(value)))>0 & nrow(as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>% filter(set!='Train') %>%
filter(is_same=='Duplicate Signatures') %>% select(value)))>0){
d_val = effectsize::cohens_d(as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>% filter(set!='Train') %>%
filter(is_same=='Duplicate Signatures') %>% select(value)),
as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>%
filter(is_same!='Duplicate Signatures')%>% select(value)),
ci=0.95)
d_train = effectsize::cohens_d(as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>% filter(set=='Train') %>%
filter(is_same=='Duplicate Signatures') %>% select(value)),
as.matrix(all_dists %>% filter(model=='simlarity autoencoders') %>% filter(set=='Train')%>%
filter(is_same!='Duplicate Signatures')%>% select(value)),
ci=0.95)
all_dists_val <- all_dists %>% filter(set!='Train') %>%
mutate(effsize = abs(d_val$Cohens_d))
all_dists_train <- all_dists %>% filter(set=='Train') %>%
mutate(effsize = abs(d_train$Cohens_d))
all_dists <- rbind(all_dists_train,all_dists_val)
all_dists  <- all_dists %>% mutate(effsize = paste0('Cohen`s d: ',round(effsize,3)))
cohen_df <- distinct(all_dists %>% select(model,effsize,set))
df_effsize <- rbind(df_effsize,cohen_df %>% mutate(split=i+1) %>% mutate(effsize=strsplit(effsize,': ')) %>% unnest(effsize) %>%
filter(effsize!='Cohen`s d') %>% mutate('Cohen`s d'=as.numeric(effsize)) %>%
select(model,split,set,'Cohen`s d'))
violin_separation <- ggplot(all_dists, aes(x=set, y=value, fill = is_same)) +
geom_violin(position = position_dodge(width = 1),width = 1)+geom_boxplot(position = position_dodge(width = 1),width = 0.05,
size=1,outlier.shape = NA)+
scale_fill_discrete(name="Latent embeddings` distance distributions",
labels=c("Random Signatures","Duplicates"))+
scale_x_discrete(expand = c(0.3, 0))+
ylim(0,2)+
xlab("")+ylab("Cosine Distance")+
theme_minimal(base_family = "Arial",base_size = 37) +
theme(text = element_text(family = "Arial",size = 37),
axis.ticks.x=element_blank(),
axis.text = element_text(family = "Arial",face = 'bold'),
legend.spacing.x = unit(5,'mm'),
legend.title = element_text(family = "Arial",size = 27) ,
legend.position = "bottom")+
geom_text(aes(x=set,y=max(all_dists  %>% select(value))+0.1, label=effsize),
data=cohen_df ,inherit.aes = FALSE,size=9.5,fontface='bold')
violin_separation <- violin_separation + theme(legend.position = "bottom")
#print(violin_separation)
plotList[[i+1]] <- violin_separation
} else{
plotList[[i+1]] <- NULL
}
message(paste0('Done split ',i))
}
png(file="suppl_fig4_eps/allgenes_similarity_trained_autoencoders_withclass_duplicates_separation.png",width=16,height=16,units = "in",res=600)
p <- ggarrange(plotlist=plotList,ncol=2,nrow=length(plotList)/2,common.legend = TRUE,legend = 'bottom',
labels = paste0(rep('Split ',2),unique(df_effsize$split)),
font.label = list(size = 10, color = "black", face = "plain", family = NULL),
hjust=-0.15)
annotate_figure(p, top = text_grob("Distributions of embedding distances in the latent space",
color = "black",face = 'plain', size = 14))
dev.off()
colnames(df_effsize)[4] <- 'value'
### Plot distance distributions for two extreme cases of observed difference
diff <- NULL
for (i in unique(df_effsize$split)){
tmp <- df_effsize %>% filter(split==i)
diff[i] <- mean(c(as.matrix(tmp %>% filter(set!='Train') %>% select(value))[,1],
as.matrix(tmp %>% filter(set=='Train') %>% select(value))[,1]))
}
ind_max <- which.max(diff)
ind_min <- which.min(diff)
list_visualize <- plotList[c(ind_min,ind_max)]
p <- ggarrange(plotlist=list_visualize,ncol=2,nrow=1,common.legend = TRUE,legend = 'bottom',
labels = paste0(rep('Split ',2),c(ind_min,ind_max)),
font.label = list(size = 30, color = "black", face = "plain", family = 'Arial'),
hjust=-0.15,vjust = 1.1)
annotate_figure(p, top = text_grob("Distributions of embedding distances in the latent space",
color = "black",face = 'plain', size = 32))
ggsave(
'suppl_fig4_eps/allgenes_similarity_trained_autoencoders_withclass_duplicates_separation_extremes.eps',
device = cairo_ps,
scale = 1,
width = 16,
height = 9,
units = "in",
dpi = 600,
)
library(tidyverse)
library(mmtable2)
library(gg3D)
library(ggpubr)
library(gt)
library(gridExtra)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center"),
cells_body(align = "center"))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center"),
cells_body(align = "center"))
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center"))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
results_landmarks_translation_ht29
View(results_landmarks_translation_a375)
table <- grid.table(results_landmarks_translation_ht29 %>% select(-cell))
ggsave("table_image.eps", table,width = 16,height = 16,res=600)
ggsave("table_image.eps", table,width = 16,height = 16,dpi =600)
table1 <- grid.table(results_landmarks_translation_a375 %>% select(-cell))
table2 <- grid.table(results_landmarks_translation_ht29 %>% select(-cell))
image <- grid.arrange(table1, table2, ncol = 2)
ggsave("table_image.eps", image,width = 16,height = 16,res=600)
ggsave("table_image.eps", image,width = 16,height = 16,dpi=600)
library(tidyverse)
library(mmtable2)
library(gg3D)
library(ggpubr)
library(gt)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center"))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
table1 <- grid.table(results_landmarks_translation_a375 %>% select(-cell))
table2 <- grid.table(results_landmarks_translation_ht29 %>% select(-cell))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(16)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(18)),
header_format(size=px(18)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(18)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(16)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
library(tidyverse)
library(mmtable2)
library(gg3D)
library(ggpubr)
library(gt)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(16)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
style_list <- list(cell_borders(sides = "top",color = "black"),
cell_borders(sides = "bottom",color = "black"),
cell_text(align = "center",size = px(20)))
# Supplementary table 1-4-------------
results_landmarks_translation_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_a375)[1] <- 'model1'
results_landmarks_translation_a375 <- results_landmarks_translation_a375 %>% mutate(cell='A375')
results_landmarks_translation_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_translation_pvalues_table.csv')
colnames(results_landmarks_translation_ht29)[1] <- 'model1'
results_landmarks_translation_ht29 <- results_landmarks_translation_ht29 %>% mutate(cell='HT29')
results_landmarks_translation <- rbind(results_landmarks_translation_a375,results_landmarks_translation_ht29)
results_landmarks_translation <- results_landmarks_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_translation <- results_landmarks_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_translation <- results_landmarks_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_1 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_1)
results_allgenes_translation_a375 <- data.table::fread('../results/MI_results/allgenes_a375_autoencoders_comparison_allgenes_translation_pvalues_table.csv')
colnames(results_allgenes_translation_a375)[1] <- 'model1'
results_allgenes_translation_a375 <- results_allgenes_translation_a375 %>% mutate(cell='A375')
results_allgenes_translation_ht29 <- data.table::fread('../results/MI_results/allgenes_ht29_autoencoders_comparison_allgenes_translation_pvalues_table.csv')
colnames(results_allgenes_translation_ht29)[1] <- 'model1'
results_allgenes_translation_ht29 <- results_allgenes_translation_ht29 %>% mutate(cell='HT29')
results_allgenes_translation <- rbind(results_allgenes_translation_a375,results_allgenes_translation_ht29)
results_allgenes_translation <- results_allgenes_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_allgenes_translation <- results_allgenes_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_allgenes_translation <- results_allgenes_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_2 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_2)
results_landmarks_recon_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_reconstruction_pvalues_table.csv')
colnames(results_landmarks_recon_a375)[1] <- 'model1'
results_landmarks_recon_a375 <- results_landmarks_recon_a375 %>% mutate(cell='A375')
results_landmarks_recon_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_reconstruction_pvalues_table.csv')
colnames(results_landmarks_recon_ht29)[1] <- 'model1'
results_landmarks_recon_ht29 <- results_landmarks_recon_ht29 %>% mutate(cell='HT29')
results_landmarks_reconstruction <- rbind(results_landmarks_recon_a375,results_landmarks_recon_ht29)
results_landmarks_reconstruction <- results_landmarks_reconstruction %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_reconstruction <- results_landmarks_reconstruction %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_reconstruction <- results_landmarks_reconstruction %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_3 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_3)
results_allgenes_recon_a375 <- data.table::fread('../results/MI_results/allgenes_a375_autoencoders_comparison_allgenes_reconstruction_pvalues_table.csv')
colnames(results_allgenes_recon_a375)[1] <- 'model1'
results_allgenes_recon_a375 <- results_allgenes_recon_a375 %>% mutate(cell='A375')
results_allgenes_recon_ht29 <- data.table::fread('../results/MI_results/allgenes_ht29_autoencoders_comparison_allgenes_reconstruction_pvalues_table.csv')
colnames(results_allgenes_recon_ht29)[1] <- 'model1'
results_allgenes_recon_ht29 <- results_allgenes_recon_ht29 %>% mutate(cell='HT29')
results_allgenes_reconstruction <- rbind(results_allgenes_recon_a375,results_allgenes_recon_ht29)
results_allgenes_reconstruction <- results_allgenes_reconstruction %>% gather('model2','p-value',-metric,-cell,-model1)
results_allgenes_reconstruction <- results_allgenes_reconstruction %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_allgenes_reconstruction <- results_allgenes_reconstruction %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_4 <-
results_landmarks_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_4)
results_allgenes_translation_a375 <- data.table::fread('../results/MI_results/allgenes_a375_autoencoders_comparison_allgenes_translation_pvalues_table.csv')
colnames(results_allgenes_translation_a375)[1] <- 'model1'
results_allgenes_translation_a375 <- results_allgenes_translation_a375 %>% mutate(cell='A375')
results_allgenes_translation_ht29 <- data.table::fread('../results/MI_results/allgenes_ht29_autoencoders_comparison_allgenes_translation_pvalues_table.csv')
colnames(results_allgenes_translation_ht29)[1] <- 'model1'
results_allgenes_translation_ht29 <- results_allgenes_translation_ht29 %>% mutate(cell='HT29')
results_allgenes_translation <- rbind(results_allgenes_translation_a375,results_allgenes_translation_ht29)
results_allgenes_translation <- results_allgenes_translation %>% gather('model2','p-value',-metric,-cell,-model1)
results_allgenes_translation <- results_allgenes_translation %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_allgenes_translation <- results_allgenes_translation %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_3 <-
results_allgenes_translation %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_3)
results_landmarks_recon_a375 <- data.table::fread('../results/MI_results/landmarks_a375_autoencoders_comparison_reconstruction_pvalues_table.csv')
colnames(results_landmarks_recon_a375)[1] <- 'model1'
results_landmarks_recon_a375 <- results_landmarks_recon_a375 %>% mutate(cell='A375')
results_landmarks_recon_ht29 <- data.table::fread('../results/MI_results/landmarks_ht29_autoencoders_comparison_reconstruction_pvalues_table.csv')
colnames(results_landmarks_recon_ht29)[1] <- 'model1'
results_landmarks_recon_ht29 <- results_landmarks_recon_ht29 %>% mutate(cell='HT29')
results_landmarks_reconstruction <- rbind(results_landmarks_recon_a375,results_landmarks_recon_ht29)
results_landmarks_reconstruction <- results_landmarks_reconstruction %>% gather('model2','p-value',-metric,-cell,-model1)
results_landmarks_reconstruction <- results_landmarks_reconstruction %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_landmarks_reconstruction <- results_landmarks_reconstruction %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_2 <-
results_landmarks_reconstruction %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_2)
results_allgenes_recon_a375 <- data.table::fread('../results/MI_results/allgenes_a375_autoencoders_comparison_allgenes_reconstruction_pvalues_table.csv')
colnames(results_allgenes_recon_a375)[1] <- 'model1'
results_allgenes_recon_a375 <- results_allgenes_recon_a375 %>% mutate(cell='A375')
results_allgenes_recon_ht29 <- data.table::fread('../results/MI_results/allgenes_ht29_autoencoders_comparison_allgenes_reconstruction_pvalues_table.csv')
colnames(results_allgenes_recon_ht29)[1] <- 'model1'
results_allgenes_recon_ht29 <- results_allgenes_recon_ht29 %>% mutate(cell='HT29')
results_allgenes_reconstruction <- rbind(results_allgenes_recon_a375,results_allgenes_recon_ht29)
results_allgenes_reconstruction <- results_allgenes_reconstruction %>% gather('model2','p-value',-metric,-cell,-model1)
results_allgenes_reconstruction <- results_allgenes_reconstruction %>% mutate(`p-value` = ifelse(`p-value`==0,NA,`p-value`))
results_allgenes_reconstruction <- results_allgenes_reconstruction %>%
mutate(`p-value`=ifelse(`p-value`<=1e-03,'\u226410\u207B\u00B3',round(`p-value`,4)))
### Visualize ###
gm_table_4 <-
results_allgenes_reconstruction %>%
mmtable(cells = `p-value`) +
header_left(metric) +
header_top(model2) +
header_left_top(model1)  +
header_top_left(cell) +
header_format(model2, scope = "table", style = style_list)
print(gm_table_4)
