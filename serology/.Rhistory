print(p1)
# Plot results
p1 <- ggboxplot(results_f1,x='task',y='F1',color = 'task') +
scale_y_continuous(minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p1)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p2)
results_acc$task <- factor(results_acc$task,
levels = c('protection classification',
'vaccination classification',
'species classification',
'classifier species translation',
'KNN species translation'))
# Plot results
p1 <- ggboxplot(results_f1,x='task',y='F1',color = 'task') +
scale_y_continuous(minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p1)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p2)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(breaks = c(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p2)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(breaks = seq(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p2)
View(results_acc)
# Load results
results <- data.table::fread('results_intermediate_encoders/10foldvalidation_wholeModel_32dim2000ep_serology.csv')
results_f1 <- results %>% select(F1Species,F1_global,F1Protection,KNNTranslationF1,ClassifierTranslationF1)
results_f1 <- results_f1 %>% gather('task','F1') %>%
mutate(task = ifelse(grepl('Species',task),'species classification',
ifelse(grepl('Protection',task),'protection classification',
ifelse(grepl('global',task),'vaccination classification',
ifelse(grepl('KNN',task),'KNN species translation',
'classifier species translation')))))
results_f1$task <- factor(results_f1$task,
levels = c('protection classification',
'vaccination classification',
'species classification',
'classifier species translation',
'KNN species translation'))
results_acc <- results %>% select(AccuracySpecies,Accuracy_global,AccProtection,KNNTranslationAcc,ClassifierTranslationAcc)
results_acc <- results_acc %>% gather('task','Accuracy') %>%
mutate(task = ifelse(grepl('Species',task),'species classification',
ifelse(grepl('Protection',task),'protection classification',
ifelse(grepl('global',task),'vaccination classification',
ifelse(grepl('KNN',task),'KNN species translation',
'classifier species translation')))))
results_acc$task <- factor(results_acc$task,
levels = c('protection classification',
'vaccination classification',
'species classification',
'classifier species translation',
'KNN species translation'))
# Plot results
p1 <- ggboxplot(results_f1,x='task',y='F1',color = 'task') +
scale_y_continuous(breaks = seq(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p1)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(breaks = seq(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=18))
print(p2)
# combine into one plot
p1/p2
# combine into one plot
p <- ggarrange(plotlist=list(p1,p2),ncol=1,nrow=2,common.legend = TRUE,legend = 'bottom')
annotate_figure(p, top = text_grob("Classification performance",
color = "black",face = 'plain', size = 18))
ggsave(
'results_intermediate_encoders/classification_performance.eps',
device = cairo_ps,
scale = 1,
width = 12,
height = 8,
units = "in",
dpi = 600,
)
ggsave(
'results_intermediate_encoders/classification_performance.eps',
device = cairo_ps,
scale = 1,
width = 16,
height = 8,
units = "in",
dpi = 600,
)
ggsave(
'results_intermediate_encoders/classification_performance.eps',
device = cairo_ps,
scale = 1,
width = 16,
height = 16,
units = "in",
dpi = 600,
)
# Plot results
p1 <- ggboxplot(results_f1,x='task',y='F1',color = 'task') +
scale_y_continuous(breaks = seq(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=20))
print(p1)
p2 <- ggboxplot(results_acc,x='task',y='Accuracy',color = 'task') +
scale_y_continuous(breaks = seq(0,1,0.2),minor_breaks = waiver(),limits = c(0,1))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "black",linewidth=1)+
theme(panel.grid.major = element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
panel.grid.minor =  element_line(color = "gray70", linewidth = 0.5, linetype = "dashed"),
axis.text.x = element_blank(),
text = element_text(family = 'Arial',size=20))
print(p2)
# combine into one plot
p <- ggarrange(plotlist=list(p1,p2),ncol=1,nrow=2,common.legend = TRUE,legend = 'bottom')
annotate_figure(p, top = text_grob("Classification performance",
color = "black",face = 'plain', size = 20))
ggsave(
'results_intermediate_encoders/classification_performance.eps',
device = cairo_ps,
scale = 1,
width = 16,
height = 16,
units = "in",
dpi = 600,
)
ggsave(
'results_intermediate_encoders/classification_performance.eps',
device = cairo_ps,
scale = 1,
width = 18,
height = 18,
units = "in",
dpi = 600,
)
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggsignif)
library(ggpubr)
library(factoextra)
### Load embeddings and data and combine them
#Load data
human_expr <- data.table::fread('data/human_exprs.csv') %>% column_to_rownames('V1')
human_hiv <- data.table::fread('data/human_metadata.csv') %>% column_to_rownames('V1')
primates_expr <- data.table::fread('data/primates_exprs.csv') %>% column_to_rownames('V1')
primates_nhp <- data.table::fread('data/primates_metadata.csv') %>% column_to_rownames('V1')
plotList <- NULL
for (i in 1:10){
#Load embeddings
z_human <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_train_',i-1,'.csv')) %>% column_to_rownames('V1')
latent_dim <- ncol(z_human)
# z_human <- z_human %>% mutate(protected = human_hiv$infect)
# z_human <- z_human %>% mutate(vaccinated = human_hiv$trt)
z_human <- z_human %>% mutate(species = 'human')
z_human_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_human_base <- z_human_base %>% mutate(protected = human_hiv$infect)
# z_human_base <- z_human_base %>% mutate(vaccinated = human_hiv$trt)
z_human_base <- z_human_base %>% mutate(species = 'human')
z_primates <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates <- z_primates %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates <- z_primates %>% mutate(vaccinated = z_humanprimates_nhp$Vaccine)
z_primates <- z_primates %>% mutate(species = 'primates')
z_primates_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates_base <- z_primates_base %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates_base <- z_primates_base %>% mutate(vaccinated = primates_nhp$Vaccine)
z_primates_base <- z_primates_base %>% mutate(species = 'primates')
z_latent <- rbind(z_human,z_primates)
z_latent_base <- rbind(z_human_base,z_primates_base)
data.table::fwrite(z_latent_base,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_global_',i,'.csv'))
data.table::fwrite(z_latent,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_',i,'.csv'))
### Dimensionality reduction and visualization
pca <- prcomp(z_latent_base[,1:latent_dim],center = T)
#fviz_eig(pca, addlabels = TRUE,ncp = 15)
df_pca<- pca$x[,1:3]
df_pca <- as.data.frame(df_pca)
colnames(df_pca) <- c('PC1','PC2','PC3')
df_pca <- df_pca %>% mutate(protected = z_latent_base$protected)
df_pca$protected <- factor(df_pca$protected)
df_pca <- df_pca %>% mutate(vaccinated = z_latent_base$vaccinated)
df_pca$vaccinated <- factor(df_pca$vaccinated)
df_pca <- df_pca %>% mutate(species = z_latent_base$species)
df_pca$species <- factor(df_pca$species)
pca_plot <- ggplot(df_pca,aes(PC1,PC2)) +geom_point(aes(col=protected,shape=species,alpha=vaccinated))+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=16),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=16))
#print(pca_plot)
plotList[[i]] <- pca_plot
z_latent_base_gathered <- z_latent_base %>% gather('latent_variable','value',-species,-vaccinated,-protected)
p_base <- ggplot(z_latent_base_gathered, aes(x = value, y = as.factor(latent_variable))) +
geom_density_ridges(stat = "binline",bins = 100,alpha = 0.8,
fill = '#125b80',color='black') +
ggtitle('Distribution of latent variables in global space')+
xlab('value') + ylab('latent variable')+ theme(base_family = "Arial") +
theme_pubr(base_family = "Arial",base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p_base)
}
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggsignif)
library(ggpubr)
library(factoextra)
### Load embeddings and data and combine them
#Load data
human_expr <- data.table::fread('data/human_exprs.csv') %>% column_to_rownames('V1')
human_hiv <- data.table::fread('data/human_metadata.csv') %>% column_to_rownames('V1')
primates_expr <- data.table::fread('data/primates_exprs.csv') %>% column_to_rownames('V1')
primates_nhp <- data.table::fread('data/primates_metadata.csv') %>% column_to_rownames('V1')
plotList <- NULL
for (i in 1:10){
#Load embeddings
z_human <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_train_',i-1,'.csv')) %>% column_to_rownames('V1')
latent_dim <- ncol(z_human)
# z_human <- z_human %>% mutate(protected = human_hiv$infect)
# z_human <- z_human %>% mutate(vaccinated = human_hiv$trt)
z_human <- z_human %>% mutate(species = 'human')
z_human_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_human_base <- z_human_base %>% mutate(protected = human_hiv$infect)
# z_human_base <- z_human_base %>% mutate(vaccinated = human_hiv$trt)
z_human_base <- z_human_base %>% mutate(species = 'human')
z_primates <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates <- z_primates %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates <- z_primates %>% mutate(vaccinated = z_humanprimates_nhp$Vaccine)
z_primates <- z_primates %>% mutate(species = 'primates')
z_primates_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates_base <- z_primates_base %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates_base <- z_primates_base %>% mutate(vaccinated = primates_nhp$Vaccine)
z_primates_base <- z_primates_base %>% mutate(species = 'primates')
z_latent <- rbind(z_human,z_primates)
z_latent_base <- rbind(z_human_base,z_primates_base)
data.table::fwrite(z_latent_base,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_global_',i,'.csv'))
data.table::fwrite(z_latent,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_',i,'.csv'))
### Dimensionality reduction and visualization
pca <- prcomp(z_latent_base[,1:latent_dim],center = T)
#fviz_eig(pca, addlabels = TRUE,ncp = 15)
df_pca<- pca$x[,1:3]
df_pca <- as.data.frame(df_pca)
colnames(df_pca) <- c('PC1','PC2','PC3')
df_pca <- df_pca %>% mutate(protected = z_latent_base$protected)
df_pca$protected <- factor(df_pca$protected)
df_pca <- df_pca %>% mutate(vaccinated = z_latent_base$vaccinated)
df_pca$vaccinated <- factor(df_pca$vaccinated)
df_pca <- df_pca %>% mutate(species = z_latent_base$species)
df_pca$species <- factor(df_pca$species)
pca_plot <- ggplot(df_pca,aes(PC1,PC2)) +geom_point(aes(col=protected,shape=species,alpha=vaccinated))+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=16),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=16))
#print(pca_plot)
plotList[[i]] <- pca_plot
z_latent_base_gathered <- z_latent_base %>% gather('latent_variable','value',-species,-vaccinated,-protected)
p_base <- ggplot(z_latent_base_gathered, aes(x = value, y = as.factor(latent_variable))) +
geom_density_ridges(stat = "binline",bins = 100,alpha = 0.8,
fill = '#125b80',color='black') +
ggtitle('Distribution of latent variables in global space')+
xlab('value') + ylab('latent variable')+ theme(base_family = "Arial") +
theme_pubr(base_family = "Arial",base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p_base)
}
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggsignif)
library(ggpubr)
library(factoextra)
#library(Rtsne)
#library(plotly)
library(ggridges)
### Load embeddings and data and combine them
#Load data
human_expr <- data.table::fread('data/human_exprs.csv') %>% column_to_rownames('V1')
human_hiv <- data.table::fread('data/human_metadata.csv') %>% column_to_rownames('V1')
primates_expr <- data.table::fread('data/primates_exprs.csv') %>% column_to_rownames('V1')
primates_nhp <- data.table::fread('data/primates_metadata.csv') %>% column_to_rownames('V1')
plotList <- NULL
for (i in 1:10){
#Load embeddings
z_human <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_train_',i-1,'.csv')) %>% column_to_rownames('V1')
latent_dim <- ncol(z_human)
# z_human <- z_human %>% mutate(protected = human_hiv$infect)
# z_human <- z_human %>% mutate(vaccinated = human_hiv$trt)
z_human <- z_human %>% mutate(species = 'human')
z_human_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_human_base <- z_human_base %>% mutate(protected = human_hiv$infect)
# z_human_base <- z_human_base %>% mutate(vaccinated = human_hiv$trt)
z_human_base <- z_human_base %>% mutate(species = 'human')
z_primates <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates <- z_primates %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates <- z_primates %>% mutate(vaccinated = z_humanprimates_nhp$Vaccine)
z_primates <- z_primates %>% mutate(species = 'primates')
z_primates_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates_base <- z_primates_base %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates_base <- z_primates_base %>% mutate(vaccinated = primates_nhp$Vaccine)
z_primates_base <- z_primates_base %>% mutate(species = 'primates')
z_latent <- rbind(z_human,z_primates)
z_latent_base <- rbind(z_human_base,z_primates_base)
data.table::fwrite(z_latent_base,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_global_',i,'.csv'))
data.table::fwrite(z_latent,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_',i,'.csv'))
### Dimensionality reduction and visualization
pca <- prcomp(z_latent_base[,1:latent_dim],center = T)
#fviz_eig(pca, addlabels = TRUE,ncp = 15)
df_pca<- pca$x[,1:3]
df_pca <- as.data.frame(df_pca)
colnames(df_pca) <- c('PC1','PC2','PC3')
df_pca <- df_pca %>% mutate(protected = z_latent_base$protected)
df_pca$protected <- factor(df_pca$protected)
df_pca <- df_pca %>% mutate(vaccinated = z_latent_base$vaccinated)
df_pca$vaccinated <- factor(df_pca$vaccinated)
df_pca <- df_pca %>% mutate(species = z_latent_base$species)
df_pca$species <- factor(df_pca$species)
pca_plot <- ggplot(df_pca,aes(PC1,PC2)) +geom_point(aes(col=protected,shape=species,alpha=vaccinated))+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=16),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=16))
#print(pca_plot)
plotList[[i]] <- pca_plot
z_latent_base_gathered <- z_latent_base %>% gather('latent_variable','value',-species,-vaccinated,-protected)
p_base <- ggplot(z_latent_base_gathered, aes(x = value, y = as.factor(latent_variable))) +
geom_density_ridges(stat = "binline",bins = 100,alpha = 0.8,
fill = '#125b80',color='black') +
ggtitle('Distribution of latent variables in global space')+
xlab('value') + ylab('latent variable')+ theme(base_family = "Arial") +
theme_pubr(base_family = "Arial",base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p_base)
}
# Visualize all subplots
p <- ggarrange(plotlist=plotList,ncol=2,nrow=5,common.legend = TRUE,legend = 'bottom',
labels = paste0(rep('Split ',2),seq(1,10)),
font.label = list(size = 10, color = "black", face = "plain", family = 'Arial'),
hjust=-0.15)
annotate_figure(p, top = text_grob("PCA visualization of the global latent space",
color = "black",face = 'plain',family = 'Arial', size = 14))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=2)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=16),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=16))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=2)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=4)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=3)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=2)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated))+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
### Load embeddings and data and combine them
#Load data
human_expr <- data.table::fread('data/human_exprs.csv') %>% column_to_rownames('V1')
human_hiv <- data.table::fread('data/human_metadata.csv') %>% column_to_rownames('V1')
primates_expr <- data.table::fread('data/primates_exprs.csv') %>% column_to_rownames('V1')
primates_nhp <- data.table::fread('data/primates_metadata.csv') %>% column_to_rownames('V1')
plotList <- NULL
for (i in 1:10){
#Load embeddings
z_human <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_train_',i-1,'.csv')) %>% column_to_rownames('V1')
latent_dim <- ncol(z_human)
# z_human <- z_human %>% mutate(protected = human_hiv$infect)
# z_human <- z_human %>% mutate(vaccinated = human_hiv$trt)
z_human <- z_human %>% mutate(species = 'human')
z_human_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_human_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_human_base <- z_human_base %>% mutate(protected = human_hiv$infect)
# z_human_base <- z_human_base %>% mutate(vaccinated = human_hiv$trt)
z_human_base <- z_human_base %>% mutate(species = 'human')
z_primates <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates <- z_primates %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates <- z_primates %>% mutate(vaccinated = z_humanprimates_nhp$Vaccine)
z_primates <- z_primates %>% mutate(species = 'primates')
z_primates_base <- data.table::fread(paste0('results_intermediate_encoders/embs/10fold/z_primates_base_train_',i-1,'.csv')) %>% column_to_rownames('V1')
# z_primates_base <- z_primates_base %>% mutate(protected = primates_nhp$ProtectBinary)
# z_primates_base <- z_primates_base %>% mutate(vaccinated = primates_nhp$Vaccine)
z_primates_base <- z_primates_base %>% mutate(species = 'primates')
z_latent <- rbind(z_human,z_primates)
z_latent_base <- rbind(z_human_base,z_primates_base)
data.table::fwrite(z_latent_base,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_global_',i,'.csv'))
data.table::fwrite(z_latent,paste0('results_intermediate_encoders/embs/combined_10fold/latent_embeddings_',i,'.csv'))
### Dimensionality reduction and visualization
pca <- prcomp(z_latent_base[,1:latent_dim],center = T)
#fviz_eig(pca, addlabels = TRUE,ncp = 15)
df_pca<- pca$x[,1:3]
df_pca <- as.data.frame(df_pca)
colnames(df_pca) <- c('PC1','PC2','PC3')
df_pca <- df_pca %>% mutate(protected = z_latent_base$protected)
df_pca$protected <- factor(df_pca$protected)
df_pca <- df_pca %>% mutate(vaccinated = z_latent_base$vaccinated)
df_pca$vaccinated <- factor(df_pca$vaccinated)
df_pca <- df_pca %>% mutate(species = z_latent_base$species)
df_pca$species <- factor(df_pca$species)
pca_plot <- ggplot(df_pca,aes(PC1,PC2)) +
geom_point(aes(col=protected,shape=species,alpha=vaccinated),size=2)+
scale_color_manual(values = c('#4878CF','#D65F5F'))+
scale_alpha_manual(values = c(0.5,1))+
ggtitle('') +
xlab(paste0('PC1'))+ ylab(paste0('PC2'))+theme_minimal()+
theme(text = element_text(size=20),plot.title = element_text(hjust = 0.5),
legend.text=element_text(size=20))
#print(pca_plot)
plotList[[i]] <- pca_plot
z_latent_base_gathered <- z_latent_base %>% gather('latent_variable','value',-species,-vaccinated,-protected)
p_base <- ggplot(z_latent_base_gathered, aes(x = value, y = as.factor(latent_variable))) +
geom_density_ridges(stat = "binline",bins = 100,alpha = 0.8,
fill = '#125b80',color='black') +
ggtitle('Distribution of latent variables in global space')+
xlab('value') + ylab('latent variable')+ theme(base_family = "Arial") +
theme_pubr(base_family = "Arial",base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p_base)
}
# Visualize all subplots
p <- ggarrange(plotlist=plotList,ncol=2,nrow=5,common.legend = TRUE,legend = 'bottom',
labels = paste0(rep('Split ',2),seq(1,10)),
font.label = list(size = 14, color = "black", face = "plain", family = 'Arial'),
hjust=-0.15)
annotate_figure(p, top = text_grob("PCA visualization of the global latent space",
color = "black",face = 'plain',family = 'Arial', size = 20))
ggsave(
'results_intermediate_encoders/pca_2d_global_train_2000ep.eps',
device = cairo_ps,
scale = 1,
width = 18,
height = 18,
units = "in",
dpi = 600,
)
